<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>

	<!-- applicationContext 폴더 위치, 파일이름 변경 설정 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-config.xml</param-value>
	</context-param>
	
	<!-- 한글 인코딩 설정 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 자동으로 객체가 생성돼서 미리 준비해 놓음. 가장 먼저 실행됨 web.xml과 같은 폴더에 위치해야함.
		applicationContext.xml라고 만들어야 ContextLoaderListener클래스를 제어할 수 있음 
		다른 폴더, 다른 이름으로 만들고 싶으면 위의 <context-param> 태그를 이용하여 설정한다. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<!-- DispatcherServlet app1 = new DispatcherServlet(); 프론트 컨트롤러 -->
	<servlet>
		<servlet-name>app1</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/spring/appServlet/bean-config.xml
				/WEB-INF/spring/appServlet/handler-config.xml
				/WEB-INF/spring/appServlet/resolver-config.xml
			</param-value>
		</init-param>
	</servlet>

	<servlet>
		<servlet-name>api</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>pay</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>


	<!-- 한 프로젝트 안에서 서로 다른 프로그램 동시에 실행 가능하지만
		똑같은 DB를 사용한다고 했을 때, DB연동 설정 코드를 각각 만들어줘야 한다. 
		DispatcherServlet이 만들어지기 전에 설정해주면 DB연동 코드를 1개의 코드로 공유가 가능하다.
		바로 맨 위에 작성한 <listener> 태그를 사용하여 applicationContext 설정. -->
	<servlet-mapping>
		<servlet-name>app1</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>api</servlet-name>
		<url-pattern>*.api</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>pay</servlet-name>
		<url-pattern>*.pay</url-pattern>
	</servlet-mapping>
  
</web-app>
